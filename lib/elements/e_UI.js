// Generated by CoffeeScript 1.11.1

/*
    Sim Urban User Interface Object.
    Written by Bryce on May.4.2017
    
    Purpose: This class provide general functions for the operation of UI's
        - static visual generation.
        - creation and deletion of buttons.

        This class also handles the text based display of information to the users.
 */

(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  TSAG.E_UI = (function(superClass) {
    extend(E_UI, superClass);

    function E_UI(scene) {
      this.scene = scene;
      E_UI.__super__.constructor.call(this);
      this._bvh = new BDS.BVH2D([]);
      this._elements = new Set();
      this._c_resting = new THREE.Color(0xe6dada);
    }

    E_UI.prototype.createButton = function(area, material, click_function) {

      /*
       * An element is an associative object of the following form:
       * {click:    () -> what happens when the user clicks on this element.
       *  polyline: A polyline representing the collision detection region for the object.
       *  material: a pointer to the material object responsible for filling the actual
       *  object on the screen.
       */
      var element;
      material.color = this._c_resting;
      element = {
        click: click_function,
        polyline: area,
        material: material
      };
      element.polyline.setAssociatedData(element);
      this._bvh.add(element.polyline);
      this._elements.add(element);
      return element;
    };

    E_UI.prototype.removeButton = function(b) {
      var a;
      a = this._elements["delete"](b);
      b = this._bvh.remove(b.polyline);
      return a && b;
    };

    E_UI.prototype.query_point = function(pt) {
      return this._bvh.query_point(pt);
    };


    /*
    
    Internal Helper functions.
     */

    E_UI.prototype._createRectangle = function(params) {
      var rect;
      rect = TSAG.style.unit_meshes.newSquare({
        color: new THREE.Color(params.fill)
      });
      rect.scale.x = params.w;
      rect.scale.y = params.h;
      rect.position.x = params.x + params.w / 2;
      rect.position.y = params.y + params.h / 2;
      rect.position.z = params.depth;
      return rect;

      /*
      mesh.scale.x = 200
      mesh.scale.y = 200
      
      
      view.add(mesh)
      
      window.mesh = mesh
       */

      /*
      @controller_build_road = 
      @controller_build_road.setActive(false)
      @controller_demolish_road = 
      @controller_demolish_road.setActive(false)
       */

      /*
       * -- Tools UI Buttons.
      b1 = new BDS.Box(new BDS.Point(0,   0),
                       new BDS.Point(64, 64));
      
      b2 = new BDS.Box(new BDS.Point(64,   0),
                       new BDS.Point(128, 64));
      
      b3 = new BDS.Box(new BDS.Point(128,  0),
                       new BDS.Point(192, 64));
      
      p1 = b1.toPolyline()
      p2 = b2.toPolyline()
      
       * Modification functions.
      func_build_road_local     = () ->
          mode = TSAG.I_Mouse_Build_Road.mode_local
          @controller_build_road.setMode(mode)
      
      func_build_road_collector = () ->
          mode = TSAG.I_Mouse_Build_Road.mode_collector
          @controller_build_road.setMode(mode)
      
      func_build_road_artery    = () ->
          mode = TSAG.I_Mouse_Build_Road.mode_artery
          @controller_build_road.setMode(mode)
      
      img_build_road_local     = null # Load Local road building image.
      img_build_road_collector = null # Load Collector road building image.
      img_build_road_artery    = null # Load Arterial road building image.
      
      @controller_ui.createButton(p1, func_build_road_local,     img_build_road_local)
      @controller_ui.createButton(p2, func_build_road_collector, img_build_road_collector)
      @controller_ui.createButton(p2, func_build_road_artery,    img_build_road_artery)
       */
    };

    return E_UI;

  })(TSAG.E_Super);

}).call(this);
