// Generated by CoffeeScript 1.11.1

/*
 *
 * Element interface class.
 *
 * Written by Bryce Summers on 10.23.2017
 *
 * A Game element consists of the following:
 * - Model that represents fundamental game state.
 * - Representations that provide information to the user about the model.
 *
 * Representations include:
 * Visual: Provide spatial information, decoration, character, etc.
 * Auditory: Provide mood, quick feedback, etc.
 * Interfacial: A representation of collision geometry, etc. that allows the user to provide inputs that influence the model.
 *
 * Element classes are responsible for providing useful features for building various common combinations of models and representations,
 * such as a path tied to a polygon, tied to a collision geometry.
 *
 * There is only ever 1 model, but there can be many elements.
 */

(function() {
  TSAG.Element = (function() {
    function Element(model) {
      this.model = model;
      this._view = new THREE.Object3D();
      this._visual = null;
    }

    Element.prototype.getVisualRepresentation = function() {
      return this._visual;
    };

    Element.prototype.setVisualRepresentation = function(visual) {
      this._visual = visual;
      this._view.remove(this._visual);
      this._view.add(this._visual);
    };

    Element.prototype.getAudioRepresentation = function() {
      return console.log("Please Implement me!");
    };

    Element.prototype.allowMutations = function() {
      return console.log("Please Implement me!");
    };

    Element.prototype.getUIWindow = function() {
      return console.log("Please Implement me!");
    };

    return Element;

  })();

}).call(this);
