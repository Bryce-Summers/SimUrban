// Generated by CoffeeScript 1.11.1

/*
 *
 * Building Element Class.
 * 
 * Written by Bryce Summers on 12 - 19 - 2016.
 *
 * Purpose: This class specifies the gameplay and aesthetic properties of building objects.
 */

(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  TSAG.E_Building = (function(superClass) {
    extend(E_Building, superClass);

    function E_Building(position, scale, rotation_z) {
      var _position, _rz, mesh, view;
      E_Building.__super__.constructor.call(this);
      view = this.getVisual();
      _position = position;
      _rz = rotation_z;
      mesh = this._newHouse({
        color: TSAG.style.c_building_fill
      });
      mesh.position.copy(position.clone());
      mesh.scale.copy(scale.clone());
      mesh.rotation.z = rotation_z;
      this._mesh = mesh;
      view.add(mesh);
    }

    E_Building.prototype._newHouse = function(params) {
      var mesh_factory, node, square, triangle;
      mesh_factory = TSAG.style.unit_meshes;
      square = mesh_factory.newSquare(params);
      triangle = mesh_factory.newTriangle(params);
      triangle.position.x = .5;
      triangle.scale.x = .5;
      node = new THREE.Object3D();
      node.add(square);
      node.add(triangle);
      return node;
    };

    E_Building.prototype.rotateBuilding = function(dr) {
      this.getVisual().remove(this._mesh);
      this._mesh.rotation.z = this._mesh.rotation.z + dr;
      return this.getVisual().add(this._mesh);
    };

    return E_Building;

  })(TSAG.E_Super);

}).call(this);

//# sourceMappingURL=e_building.js.map
