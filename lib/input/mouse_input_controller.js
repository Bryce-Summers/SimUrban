// Generated by CoffeeScript 1.11.1
(function() {
  TSAG.Mouse_Input_Controller = (function() {
    function Mouse_Input_Controller(scene, camera) {
      var h, mesh, mesh_factory, params, scale, w;
      this.scene = scene;
      this.camera = camera;
      mesh_factory = this.scene.getMeshFactory();
      params = {
        color: 0xff0000
      };
      mesh = mesh_factory.newCircle(params);
      scale = 10;
      mesh.position.z = 1;
      w = scale;
      h = scale;
      scale = mesh.scale;
      scale.x = w;
      scale.y = h;
      this.scene.add(mesh);
      this.pointer = mesh;
      this.state = "idle";
      this._mousePrevious = {
        x: 0,
        y: 0
      };
      this._min_dist = 10;
    }

    Mouse_Input_Controller.prototype.mouse_down = function(event, rightButton) {
      var dist;
      if (this.state === "idle") {
        this.road = new THREE.CatmullRomCurve3([new THREE.Vector3(event.x, event.y, 0), new THREE.Vector3(event.x, event.y, 0)]);
        this.state = "building";
        this._mousePrevious.x = event.x;
        return this._mousePrevious.y = event.y;
      } else {
        dist = TSAG.Math.distance(event.x, event.y, this._mousePrevious.x, this._mousePrevious.y);
        if (dist > this._min_dist) {
          this.road.points.push(new THREE.Vector3(event.x, event.y, 0));
          this._mousePrevious.x = event.x;
          return this._mousePrevious.y = event.y;
        } else {
          this.state = "idle";
          return this.road_obj = null;
        }
      }

      /*
      if rightButton
          @state = "idle"
           * Preserve the Road object.
          @road_obj = null
       */
    };

    Mouse_Input_Controller.prototype.mouse_up = function(event) {};

    Mouse_Input_Controller.prototype.mouse_move = function(event) {
      var geometry, len, material, pos, screen_h, screen_w;
      pos = this.pointer.position;
      screen_w = window.innerWidth;
      screen_h = window.innerHeight;
      pos.x = event.x;
      pos.y = event.y;
      if (this.road_obj) {
        this.scene.remove(this.road_obj);
      }
      if (this.state === "building") {
        len = this.road.points.length;
        pos = this.road.points[len - 1];
        pos.x = event.x;
        pos.y = event.y;
        geometry = new THREE.Geometry();
        geometry.vertices = this.road.getPoints(500);
        material = new THREE.LineBasicMaterial({
          color: 0x000000
        });
        this.road_obj = new THREE.Line(geometry, material);
        return this.scene.add(this.road_obj);
      }
    };

    return Mouse_Input_Controller;

  })();

}).call(this);
