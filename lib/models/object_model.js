// Generated by CoffeeScript 1.11.1

/*
    Written by Bryce Summers on 10.23.2017

    Objects are agents that try to do stuff. They carry along data, then sleep.

    Objects are responsible for determining when statistics ought to be logged,
    when plans should be created, and for following the rules.
 */

(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  TSAG.Object_Model = (function(superClass) {
    extend(Object_Model, superClass);

    function Object_Model(scene) {
      this.scene = scene;
      this.active = null;
      this.state = null;
      this.statistics = null;
      this.navigation = null;
      this.percentage = 0;
      this.representation = null;
    }

    Object_Model.prototype.buildModel = function() {
      this.statistics = new TSAG.Statistics_Model();
      this.navigation = new TSAG.Navigation_Model();
      this.representation = new TSAG.Representation(this);
      this.percentage = 0;
      this.state = {};
      return this.active = false;
    };

    Object_Model.prototype.update = function(dt) {
      return this.navigation.move(dt);
    };

    Object_Model.prototype.activate = function() {
      this.scene.activateObject(this);
      return this.active = true;
    };

    Object_Model.prototype.deactivate = function() {
      this.scene.deactivateObject(this);
      return this.active = false;
    };

    Object_Model.prototype.lookupKey = function(key) {
      return this.state[key];
    };

    Object_Model.prototype.setKey = function(key, val) {
      this.state[key] = val;
    };

    return Object_Model;

  })(TSAG.Model);

}).call(this);
