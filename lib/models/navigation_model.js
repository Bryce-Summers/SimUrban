// Generated by CoffeeScript 1.11.1

/*
    Written by Bryce Summers on 10.23.2017

    A model for the navigation of an object.

    This handles all of the logic for location and the creation of plans.
    Objects determine when to plan.
 */

(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  TSAG.Navigation_Model = (function(superClass) {
    extend(Navigation_Model, superClass);

    function Navigation_Model(src, dest) {
      this.current_location_model = src;
      this.destination = dest;
      this.plan_stack = [];
      this.finished_plan_stack = [];
      this.buildModel();
    }

    Navigation_Model.prototype.updatePlan = function() {};

    Navigation_Model.prototype.get_current_location = function() {
      return this.current_location_model;
    };

    return Navigation_Model;

  })(TSAG.Model);

}).call(this);
