// Generated by CoffeeScript 1.11.1

/*
    Scribble.JS Halfedge Graph data classes.
    Data Classes that associated Sim Urban relevant information with Halfedge graph Topology members.

    Written by Bryce Summers on 3 - 7 - 2017.
 */

(function() {
  TSAG.Graph_Data = (function() {
    function Graph_Data(graph) {
      this.graph = graph;
    }

    Graph_Data.prototype.clearFaceMarks = function() {
      var iter, results;
      iter = this.graph.facesBegin();
      results = [];
      while (iter.hasNext()) {
        results.push(iter.next().data.marked = false);
      }
      return results;
    };

    Graph_Data.prototype.clearVertexMarks = function() {
      var iter, results;
      iter = this.graph.verticesBegin();
      results = [];
      while (iter.hasNext()) {
        results.push(iter.next().data.marked = false);
      }
      return results;
    };

    Graph_Data.prototype.clearEdgeMarks = function() {
      var iter, results;
      iter = this.graph.edgesBegin();
      results = [];
      while (iter.hasNext()) {
        results.push(iter.next().data.marked = false);
      }
      return results;
    };

    Graph_Data.prototype.clearHalfedgeMarks = function() {
      var iter, results;
      iter = this.graph.halfedgesBegin();
      results = [];
      while (iter.hasNext()) {
        results.push(iter.next().data.marked = false);
      }
      return results;
    };

    Graph_Data.prototype.clearMarks = function() {
      this.clearFaceMarks();
      this.clearVertexMarks();
      this.clearEdgeMarks();
      return this.clearHalfedgeMarks();
    };

    return Graph_Data;

  })();

  TSAG.Face_Data = (function() {
    function Face_Data(face) {
      this.face = face;
      this.marked = false;
      this.element = null;
    }

    return Face_Data;

  })();

  TSAG.Vertex_Data = (function() {
    function Vertex_Data(vertex) {
      this.vertex = vertex;
      this.marked = false;
      this.point = null;
      this.element = null;
    }

    return Vertex_Data;

  })();

  TSAG.Edge_Data = (function() {
    function Edge_Data(edge) {
      this.edge = edge;
      this.marked = false;
      this.element = null;
    }

    return Edge_Data;

  })();

  TSAG.Halfedge_Data = (function() {
    function Halfedge_Data(halfedge) {
      this.halfedge = halfedge;
      this.marked = false;
      this.next_extraordinary = null;
      this.element = null;

      /*
      @_curve
      @_time1
      @_time2
       */
    }


    /*
    
    I wonder if these will be useful in Sim Urban???
    
     * Halfedges may represent subsections of curves.
    setAssociatedCurve: (obj) ->
        @_curve = obj
        return
    
    getAssociatedCurve: () ->
        return @_curve
    
     * Associate parameter values with the beginning and end of this halfedge.
    setTimes: (time1, time2) ->
        @_time1 = time1
        @_time2 = time2
    
    getTimes: () ->
        return undefined if @_time1 is undefined
        return [@_time1, @_time2]
     */

    return Halfedge_Data;

  })();

}).call(this);

//# sourceMappingURL=topology_data.js.map
